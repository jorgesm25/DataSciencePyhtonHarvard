########################################## COMPARAR MODELOS DE REGRESION LINEAL SIMPLE CON REGRESIÃ“N LINEAL MULTIPLE 

#------------------------ Compara 3 distintos modelos de RLS
# Import necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from helper import fit_and_plot_linear, fit_and_plot_multi
%matplotlib inline

	TV	Radio	Newspaper	Sales
0	230.1	37.8	69.2	22.1
1	44.5	39.3	45.1	10.4
2	17.2	45.9	69.3	9.3
3	151.5	41.3	58.5	18.5
4	180.8	10.8	58.4	12.9

# Define an empty Pandas dataframe to store the R-squared value associated with each 
# predictor for both the train and test split
df_results = pd.DataFrame(columns=['Predictor', 'R2 Train', 'R2 Test'])
df_results.head()

	Predictor	R2 Train	R2 Test
|           |  |    |

# For each predictor in the dataframe, call the function "fit_and_plot_linear()"
# from the helper file with the predictor as a parameter to the function

# This function will split the data into train and test split, fit a linear model
# on the train data and compute the R-squared value on both the train and test data

predictors = ["TV", "Radio", "Newspaper"]

for predictor in predictors:
    r2_train, r2_test = fit_and_plot_linear(df[[predictor]])
    df_results = df_results.append({'Predictor': predictor, 'R2 Train': r2_train, 'R2 Test': r2_test}, ignore_index=True)

print(df_results)

[IMAGEN]
[IMAGEN]
[IMAGEN]

   Predictor  R2 Train   R2 Test
0         TV  0.588474  0.676315
1      Radio  0.356718  0.229817
2  Newspaper  0.064416 -0.021217

Based on the plot and results, which model do you think is the best for prediction?

A. TV
B. Radio
C. Newspaper
D. Sales

### edTest(test_chow1) ###
# Submit an answer choice as a string below 
# (Eg. if you choose option C, put 'C')
answer1 = 'A'

#--------------------------- Regresion lineal multiple

# Call the function "fit_and_plot_multi()" from the helper to fit a multilinear model
# on the train data and compute the R-squared value on both the train and test data

r2_train_multi, r2_test_multi = fit_and_plot_multi()

print("Multilinear Model R2 Train:", r2_train_multi)
print("Multilinear Model R2 Test:", r2_test_multi)

Multilinear Model R2 Train: 0.9067114990146383
Multilinear Model R2 Test: 0.8601145185017867

### edTest(test_dataframe) ###

# Store the R-squared values for all models
# in the dataframe intialized above
df_results = df_results.append({'Predictor': 'Multilinear', 'R2 Train': r2_train_multi, 'R2 Test': r2_test_multi}, ignore_index=True)

# Take a quick look at the dataframe
df_results.head()

Predictor	R2 Train	R2 Test
0	TV	0.588474	0.676315
1	Radio	0.356718	0.229817
2	Newspaper	0.064416	-0.021217
3	Multilinear	0.906711	0.860115

The best model is the multilinear because B. The model has more information from various predictors/features.
